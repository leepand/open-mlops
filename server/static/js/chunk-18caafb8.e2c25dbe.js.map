{"version":3,"sources":["webpack:///./src/assets/icon-yes.svg","webpack:///./src/assets/icon-no.svg","webpack:///./src/views/model-deploy/ModelManagerPage.vue?e5c7","webpack:///./src/views/model-deploy/ModelManagerPage.vue?61f3","webpack:///src/views/model-deploy/ModelManagerPage.vue","webpack:///./src/views/model-deploy/ModelManagerPage.vue?90c1","webpack:///./src/views/model-deploy/ModelManagerPage.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticStyle","staticClass","attrs","size","slot","name","params","_v","_s","_f","ModelbaseInfo","creation_timestamp","last_updated_timestamp","on","handleModelServing","model","value","callback","$$v","activeNames","expression","_t","directives","rawName","editModelTaskVisible","description","minRows","maxRows","editModelForm","$set","$event","handleModelDescEdit","nativeOn","editLoading","editSubmit","apply","arguments","stageStatus","versionList","selsChange","scopedSlots","_u","key","fn","scope","row","status","ab_id","id","campaign_id","CampaignMetaData","campaign","formatTime","creation_date","sels","length","batchRemove","total","handleCurrentChange","regFormVisible","ref","regForm","regFormRules","selectCreatedModels","getRegisteredModelsLoading","_l","item","label","regLoading","regSubmit","addFormVisible","addForm","addFormRules","addLoading","addSubmit","staticRenderFns","data","path","back_display","baseModelFileSelected","activeIndex","selsModelTracking","selsModelFile","files","modelFilesLoading","modelFiles","imageform","imagename","imageDesc","imageFormRules","required","message","trigger","instanceform","instancename","instanceDesc","instanceFormRules","form","modelname","modelData","altName","exposureNum","FormRules","processstatus","stepsetting","current","steps","title","content","active","loadworkspace","file_content","ExperimentsByTask","ModelTaskMetaData","filters","project_id","task_id","RegisteredModels","CreatedModels","ModelTaskList","page","listLoading","editModelVisible","model_name","min","max","model_id","created","formatDate","MM","d","h","m","s","methods","disabledCheckBox","index","handleFileDir","console","self","selsChangeModelFile","handleSelect","keyPath","_back","getJupyterFiles","$","type","url","async","headers","Authorization","timeout","success","pathParam","center","submitForm","formName","alert","resetForm","removeDomain","addDomain","createDeploy","modifyPostLevel","step","done","on_click","e","next","prev","getExperimentsByTask","user_key","getJupyterNotebook","getModelTaskData","handleModelOps","command","_getRegisteredModels","experiment_id","getRegisteredModels","_getModelBaseinfo","getModelBaseinfo","handleDel","then","table_name","ids","delSampleTable","val","handleReg","handleAdd","getModelTaskStatus","task_name","regModelToTask","addModelTask","selsChangeModelTracking","compareModels","exp_id","query","exp_id_list","delHost","mounted","component"],"mappings":"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BACA,eAEAC,gBAvHA,SAuHAC,EAAAnH,GACA0F,6BAGA0B,KA3HA,WA4HA,cACA,6BACA,+CAEAC,SAhIA,SAgIAC,GACA5B,eACA,QACA,yBAGA6B,KAtIA,SAsIAX,GAAA,WACA,oCACA,IAEA,2BACAlB,6EAKA8B,KAhJA,WAkJA,eAEAC,qBApJA,WAqJA,WACAxB,UACAC,WACAC,oDACAC,SACAxE,MAAAuC,yCACAC,mCACAI,YACAkD,oDACArK,qBACAgJ,SACAC,oEAEAC,YACAC,oBACA,mBACAb,gCACAD,2DAGAC,kBACAhD,cACA+D,gBAMAiB,mBAjLA,WAiLA,WACA,OACA,sBACA,sBAAAxD,yCACAC,qCAEAsB,uBACAO,UACAC,YACAC,6CACAC,SAEAxE,OAEAyE,SACA,kCACAC,oEAEAC,YACAC,oBAGAb,iBACA,uBAOAiC,iBA/MA,WAgNA,WACA3B,UACAC,WACAC,2CACAC,SACAxE,MAAAuC,yCACAC,oCACAiC,SACAC,oEAEAC,YACAC,oBACA,mBACAb,gCACAD,2DAGAC,kBACAhD,cACA+D,gBAMAmB,eAzOA,SAyOAC,GACApC,yBACA,kBACA,CACArI,aACAC,OACA,CACA6G,yCACAC,mCACAU,cAGA,mCAKAiD,qBA1PA,WA2PA,mCACA,WACA,GACAC,+CACAN,qDAEA,GACA,kCACApB,oEAEA2B,sCACA,YAAI,EAAJ,OAAI,EAAJ,OACAtC,gCACAA,qBACAD,wDACA,cAEAC,kBACAhD,UACA+D,gBAOAwB,kBArRA,WAsRA,oBACA,WACA,GACA7K,mCACAqK,qDAGA,GACA,kCACApB,oEAEA6B,sCACA,YAAI,EAAJ,OAAI,EAAJ,OACAxC,iBACA,cAEAA,kBACAD,8CAEAC,kBACAhD,UACA+D,gBAKAxH,sBAAA,WAEA,oBACA,sBACAyF,yCACAlG,2CACAiJ,sDAGAhC,uBACAO,UACAC,YACAC,gDACAC,SACAxE,OACAyE,SACA,kCACAC,oEAEAC,YACAC,oBACAd,wBACA,iBACA,0BACA,0BAOA0C,wBAAA,WACA,gCACAlC,iBACAmC,MAAA,WACA,iBAEA,QACA,GACAlE,8CACAmE,uBACAC,YAEA,GACA,kCACAjC,oEAEAZ,wCACA8C,sCACA,YAAI,EAAJ,OACA,aACA7C,YACAhD,eACA+D,UACAR,iBAGAP,kBACAhD,UACA+D,YAGAf,yBAKAjF,oBAnXA,SAmXA+H,GACA,YACA,sBAGAC,wBACA,uBACA,iCACA,6BAIAC,qBACA,wBAGAC,+BACA,UAGAvH,qBAAA,WACA,OAEA,yCACA,GACA,iDACAsE,gBACA,OACAxB,8CACAW,4BACA+D,yBACAnB,qDAEAhC,qBACA,OACA,kCACAY,oEAEAwC,mDACA,YAAI,EAAJ,OACAnD,iBACA,cACAA,YACAhD,eACA+D,UACAR,iBAEAP,iCACAA,oBACAA,sBAEAA,kBACAhD,UACA+D,sBAcAhF,qBAAA,WACA,yCAEA,GADAgE,eACA,GACA,QACA,kDACAC,gBAEA,OACAxB,8CACA9G,oBACAoB,kCACAiJ,qDAEAhC,sDACA,OACA,kCACAY,oEAEAyC,iDACA,YAAI,EAAJ,OACApD,gBACA,cACAA,YACAhD,mBACA+D,UACAR,iBAEAP,iCACAA,oBACAA,sBACA,aACAA,kBACAhD,UACA+D,aAGAf,kBACAhD,UACA+D,YAEAf,iCACAA,oBACAA,iCAOAqD,oCACA,0BAEAC,yBAAA,WACA,yDACA,OACA,iCACA/C,iBACAmC,MAAA,WACA1C,iBAGAxB,mCAKAmC,4CAGA,eACA,CACAjJ,gBACAC,OACA,CACA6G,sCACAC,gCACA8E,aAEAC,OAAAC,qBASA5I,uBAAA,WACA,4CACA,OACA,iCACA0F,iBACAmC,MAAA,WACA1C,iBAEA,OACAxB,8CACAoE,OAEA,GACA,kCACAjC,oEAGA+C,+BACA,YAAI,EAAJ,OACA1D,iBACA,aACAA,YACAhD,eACA+D,UACAR,iBAGAP,kBACAhD,UACA+D,YAGAf,2BAKA2D,QApsBA,WAqsBA,4BACA,2BCl6ByW,I,wBCQrWC,EAAY,eACd,EACA9M,EACAkF,GACA,EACA,KACA,WACA,MAIa,aAAA4H,E","file":"js/chunk-18caafb8.e2c25dbe.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/icon-yes.d2f9f035.svg\";","module.exports = __webpack_public_path__ + \"img/icon-no.439e8214.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelManagerPage.vue?vue&type=style&index=0&id=09eeb7c6&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin\":\"30px\"}},[_c('el-divider'),_c('el-descriptions',{staticClass:\"margin-top\",staticStyle:{\"margin-top\":\"25px\"},attrs:{\"title\":\"模型信息\",\"column\":3,\"size\":_vm.size}},[_c('template',{slot:\"extra\"},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":{ name: '模型中心', params: {}},\"align\":\"right\"}},[_c('el-button',{},[_c('i',{staticClass:\"el-icon-arrow-left\",staticStyle:{\"margin-right\":\"10px\"}}),_vm._v(\"返回模型中心\")])],1)],1),_c('el-descriptions-item',{attrs:{\"label\":\"创建时间\"}},[_vm._v(_vm._s(_vm._f(\"formatDate\")(_vm.ModelbaseInfo.creation_timestamp)))]),_c('el-descriptions-item',{attrs:{\"label\":\"最近修改时间\"}},[_vm._v(_vm._s(_vm._f(\"formatDate\")(_vm.ModelbaseInfo.last_updated_timestamp)))]),_c('el-descriptions-item',{attrs:{\"label\":\"当前状态\"}},[_c('el-dropdown',{on:{\"command\":_vm.handleModelServing}},[_c('span',{staticClass:\"el-dropdown-link\"},[_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(\"未部署\")]),_c('i',{staticClass:\"el-icon-arrow-down el-icon--right\"})],1),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":\"a\"}},[_vm._v(\"过度到    \"),_c('i',{staticClass:\"el-icon-right\"}),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(\"存档\")])],1),_c('el-dropdown-item',{attrs:{\"command\":\"b\"}},[_vm._v(\"过度到    \"),_c('i',{staticClass:\"el-icon-right\"}),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"warning\"}},[_vm._v(\"分期\")])],1)],1)],1)],1)],2),_c('el-divider'),_c('el-collapse',{model:{value:(_vm.activeNames),callback:function ($$v) {_vm.activeNames=$$v},expression:\"activeNames\"}},[_c('el-collapse-item',{attrs:{\"title\":\"活动描述\",\"name\":\"1\"}},[_c('div',[_vm._t(\"default\",function(){return [_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.editModelTaskVisible),expression:\"!editModelTaskVisible\"}]},[_vm._v(_vm._s(_vm.ModelbaseInfo.description))]),_c('el-input',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.editModelTaskVisible),expression:\"editModelTaskVisible\"}],staticClass:\"modelDescStyle\",attrs:{\"type\":\"textarea\",\"autosize\":{ minRows: 4, maxRows: 6}},model:{value:(_vm.editModelForm.description),callback:function ($$v) {_vm.$set(_vm.editModelForm, \"description\", $$v)},expression:\"editModelForm.description\"}}),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.editModelTaskVisible),expression:\"!editModelTaskVisible\"}],staticClass:\"inline\",staticStyle:{\"padding\":\"0px\",\"margin-right\":\"10px\"},attrs:{\"icon\":\"el-icon-edit\",\"type\":\"text\"},on:{\"click\":function($event){return _vm.handleModelDescEdit('index',{description:'description'})}}}),_c('br'),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.editModelTaskVisible),expression:\"editModelTaskVisible\"}]},[_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"el-icon-back\"},nativeOn:{\"click\":function($event){_vm.editModelTaskVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"text\",\"loading\":_vm.editLoading,\"icon\":\"el-icon-check\"},nativeOn:{\"click\":function($event){return _vm.editSubmit.apply(null, arguments)}}},[_vm._v(\"保存\")])],1)]},{\"description\":_vm.description})],2)]),_c('el-collapse-item',{attrs:{\"title\":\"模型版本列表\",\"name\":\"2\"}},[_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"10px\"},attrs:{\"span\":24}},[_c('div',[_c('el-radio-group',{model:{value:(_vm.stageStatus),callback:function ($$v) {_vm.stageStatus=$$v},expression:\"stageStatus\"}},[_c('el-radio-button',{attrs:{\"label\":\"All\"}}),_c('el-radio-button',{attrs:{\"label\":\"Active\"}})],1)],1)]),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.versionList,\"highlight-current-row\":\"\"},on:{\"selection-change\":_vm.selsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"5%\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"版本\",\"min-width\":\"20%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.status),expression:\"!scope.row.status\"}],attrs:{\"src\":require(\"@/assets/icon-yes.svg\")}}),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.status),expression:\"scope.row.status\"}],attrs:{\"src\":require(\"@/assets/icon-no.svg\")}}),_vm._v(\"\\n                         \\n                        \"),_c('el-icon',{attrs:{\"name\":\"name\"}}),_c('router-link',{staticStyle:{\"text-decoration\":\"none\"},attrs:{\"to\":{ name: '实验组信息', params: {ab_id: scope.row.id,campaign_id:_vm.CampaignMetaData.campaign.id}}}},[_vm._v(_vm._s(scope.row.name)+\"\\n                        \")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"注册时间\",\"min-width\":\"15%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"}}),_c('el-table-column',{attrs:{\"prop\":\"abalt_cnt\",\"label\":\"责任人\",\"min-width\":\"15%\",\"sortable\":\"\"}}),_c('el-table-column',{attrs:{\"prop\":\"creation_date\",\"formatter\":_vm.formatTime,\"label\":\"创建时间\",\"min-width\":\"15%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('timeago',{attrs:{\"datetime\":scope.row.creation_date,\"locale\":\"zh-CN\"}})]}}])}),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"版本描述\",\"min-width\":\"30%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"}})],1),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[_c('el-button',{attrs:{\"type\":\"success\",\"disabled\":this.sels.length===0},on:{\"click\":_vm.batchRemove}},[_vm._v(\"Compare\")]),_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"background\":\"\",\"layout\":\"prev, pager, next\",\"page-size\":20,\"page-count\":_vm.total},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1)],1),_c('el-dialog',{staticStyle:{\"width\":\"60%\",\"left\":\"20%\"},attrs:{\"title\":\"部署模型\",\"visible\":_vm.regFormVisible,\"close-on-click-modal\":false,\"inline\":\"true\"},on:{\"update:visible\":function($event){_vm.regFormVisible=$event}}},[_c('el-form',{ref:\"regForm\",attrs:{\"model\":_vm.regForm,\"rules\":_vm.regFormRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"模型名称\",\"prop\":\"model_name\"}},[_c('el-select',{staticStyle:{\"width\":\"90%\"},attrs:{\"filterable\":\"\",\"remote\":\"\",\"remote-method\":_vm.selectCreatedModels,\"loading\":_vm.getRegisteredModelsLoading,\"placeholder\":\"请选择模型\"},model:{value:(_vm.regForm.model_id),callback:function ($$v) {_vm.$set(_vm.regForm, \"model_id\", $$v)},expression:\"regForm.model_id\"}},_vm._l((_vm.CreatedModels),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.regFormVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.regLoading},nativeOn:{\"click\":function($event){return _vm.regSubmit.apply(null, arguments)}}},[_vm._v(\"提交注册\")])],1)],1),_c('el-dialog',{staticStyle:{\"width\":\"60%\",\"left\":\"20%\"},attrs:{\"title\":\"创建模型任务\",\"inline\":\"true\",\"visible\":_vm.addFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.addFormVisible=$event}}},[_c('el-form',{ref:\"addForm\",attrs:{\"model\":_vm.addForm,\"label-width\":\"80px\",\"rules\":_vm.addFormRules}},[_c('el-form-item',{attrs:{\"label\":\"任务名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addForm.name),callback:function ($$v) {_vm.$set(_vm.addForm, \"name\", $$v)},expression:\"addForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"任务描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":3},model:{value:(_vm.addForm.description),callback:function ($$v) {_vm.$set(_vm.addForm, \"description\", $$v)},expression:\"addForm.description\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.addFormVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.addLoading},nativeOn:{\"click\":function($event){return _vm.addSubmit.apply(null, arguments)}}},[_vm._v(\"提交\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"margin: 30px\">\n    <el-divider></el-divider>\n    <el-descriptions\n      class=\"margin-top\"\n      title=\"模型信息\"\n      style=\"margin-top: 25px\"\n      :column=\"3\"\n      :size=\"size\"\n    >\n      <template slot=\"extra\">\n        <router-link\n          :to=\"{ name: '模型中心', params: {}}\"\n          style=\"text-decoration: none; color: aliceblue\"\n          align=\"right\"\n        >\n          <el-button class=\"\"\n            ><i class=\"el-icon-arrow-left\" style=\"margin-right: 10px\"></i\n            >返回模型中心</el-button\n          >\n        </router-link>\n      </template>\n\n      <el-descriptions-item\n        label=\"创建时间\"\n        >{{ ModelbaseInfo.creation_timestamp | formatDate }}</el-descriptions-item\n      >\n      <el-descriptions-item\n        label=\"最近修改时间\"\n        >{{ ModelbaseInfo.last_updated_timestamp | formatDate }}</el-descriptions-item\n      >\n      <el-descriptions-item label=\"当前状态\">\n        <el-dropdown @command=\"handleModelServing\">\n          <span class=\"el-dropdown-link\">\n            <el-tag size=\"small\" type=\"info\">未部署</el-tag\n            ><i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"a\"\n              >过度到&nbsp;&nbsp;&nbsp;&nbsp;<i class=\"el-icon-right\"></i>\n              <el-tag size=\"small\" type=\"info\">存档</el-tag>\n            </el-dropdown-item>\n            <el-dropdown-item command=\"b\"\n              >过度到&nbsp;&nbsp;&nbsp;&nbsp;<i class=\"el-icon-right\"></i>\n              <el-tag size=\"small\" type=\"warning\">分期</el-tag>\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </el-descriptions-item>\n    </el-descriptions>\n    <el-divider></el-divider>\n\n     <el-collapse v-model=\"activeNames\">\n            <el-collapse-item title=\"活动描述\" name=\"1\">\n                <div> \n                    <slot :description=\"description\" class=\"main-a\">\n                    <span v-show=\"!editModelTaskVisible\">{{ModelbaseInfo.description}}</span>\n                    <el-input v-model=\"editModelForm.description\" type=\"textarea\" \n                              :autosize=\"{ minRows: 4, maxRows: 6}\"\n                              class=\"modelDescStyle\"\n                              v-show=\"editModelTaskVisible\">\n                    </el-input>\n                    <el-button  v-show=\"!editModelTaskVisible\" \n                               class=\"inline\" \n                               icon=\"el-icon-edit\" \n                               type=\"text\"  \n                               @click=\"handleModelDescEdit('index',{description:'description'})\" \n                               style=\"padding: 0px; margin-right: 10px;\">\n                    </el-button>\n                    <br>\n                     <span v-show=\"editModelTaskVisible\">\n                        <el-button type=\"text\"  @click.native=\"editModelTaskVisible = false\" icon=\"el-icon-back\">取消</el-button>\n                        <el-button type=\"text\" @click.native=\"editSubmit\" :loading=\"editLoading\" icon=\"el-icon-check\">保存</el-button>\n                    </span>\n                   </slot>\n                </div>\n              </el-collapse-item>\n          <el-collapse-item title=\"模型版本列表\" name=\"2\">\n              <!--工具条-->\n              <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 10px;\">\n                  <div>\n                      <el-radio-group v-model=\"stageStatus\">\n                          <el-radio-button label=\"All\"></el-radio-button>\n                          <el-radio-button label=\"Active\"></el-radio-button>\n                      </el-radio-group>\n                  </div>\n              </el-col>\n              <!--列表-->\n              <el-table :data=\"versionList\"\n                        highlight-current-row\n                        v-loading=\"listLoading\"\n                        @selection-change=\"selsChange\" style=\"width: 100%;\">\n                  <el-table-column type=\"selection\" min-width=\"5%\">\n                  </el-table-column>\n                  <el-table-column prop=\"name\" label=\"版本\" min-width=\"20%\" sortable show-overflow-tooltip>\n                      <template slot-scope=\"scope\">\n                          <img v-show=\"!scope.row.status\" src=\"@/assets/icon-yes.svg\"/>\n                          <img v-show=\"scope.row.status\" src=\"@/assets/icon-no.svg\"/>\n                          &nbsp;\n                          <el-icon name=\"name\"></el-icon>\n                                      <router-link :to=\"{ name: '实验组信息', params: {ab_id: scope.row.id,campaign_id:CampaignMetaData.campaign.id}}\"\n                                       style='text-decoration: none;'>{{ scope.row.name }}\n                          </router-link>\n                      </template>\n                  </el-table-column>\n                  <el-table-column  prop=\"id\" label=\"注册时间\" min-width=\"15%\" sortable show-overflow-tooltip>\n                  </el-table-column>\n                  <el-table-column prop=\"abalt_cnt\" label=\"责任人\" min-width=\"15%\" sortable>\n            </el-table-column>\n                  <el-table-column prop=\"creation_date\" :formatter=\"formatTime\" label=\"创建时间\" min-width=\"15%\" sortable show-overflow-tooltip>\n                    <template slot-scope=\"scope\">\n                        <timeago :datetime=\"scope.row.creation_date\" locale=\"zh-CN\"></timeago>\n                    </template>\n                  </el-table-column>\n                  <el-table-column prop=\"description\" label=\"版本描述\" min-width=\"30%\" sortable show-overflow-tooltip>\n                  </el-table-column>\n\n              </el-table> <!--工具条-->\n              <el-col :span=\"24\" class=\"toolbar\">\n                  <el-button type=\"success\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">Compare</el-button>\n                  <el-pagination background layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"20\" :page-count=\"total\" style=\"float:right;\">\n                  </el-pagination>\n              </el-col>\n           </el-collapse-item>\n       </el-collapse>\n\n\n    <!--注册界面-->\n    <el-dialog\n      title=\"部署模型\"\n      :visible.sync=\"regFormVisible\"\n      :close-on-click-modal=\"false\"\n      style=\"width: 60%; left: 20%\"\n      inline=\"true\"\n    >\n      <el-form\n        :model=\"regForm\"\n        :rules=\"regFormRules\"\n        ref=\"regForm\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"模型名称\" prop=\"model_name\">\n          <el-select\n            v-model=\"regForm.model_id\"\n            filterable\n            remote\n            :remote-method=\"selectCreatedModels\"\n            :loading=\"getRegisteredModelsLoading\"\n            placeholder=\"请选择模型\"\n            style=\"width: 90%\"\n          >\n            <el-option\n              v-for=\"item in CreatedModels\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            >\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"regFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          @click.native=\"regSubmit\"\n          :loading=\"regLoading\"\n          >提交注册</el-button\n        >\n      </div>\n    </el-dialog>\n\n    <!--新增界面-->\n    <el-dialog\n      title=\"创建模型任务\"\n      inline=\"true\"\n      :visible.sync=\"addFormVisible\"\n      :close-on-click-modal=\"false\"\n      style=\"width: 60%; left: 20%\"\n    >\n      <el-form\n        :model=\"addForm\"\n        label-width=\"80px\"\n        :rules=\"addFormRules\"\n        ref=\"addForm\"\n      >\n        <el-form-item label=\"任务名称\" prop=\"name\">\n          <el-input v-model=\"addForm.name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"任务描述\" prop=\"description\">\n          <el-input\n            type=\"textarea\"\n            :rows=\"3\"\n            v-model=\"addForm.description\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          @click.native=\"addSubmit\"\n          :loading=\"addLoading\"\n          >提交</el-button\n        >\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script src=\"//unpkg.com/timeago.js\"></script>\n\n<script>\n\nimport { test, getModelBaseinfo, regModelToTask, addModelTask, getRegisteredModels } from '@/api/api'\nimport moment from 'moment'\n\n// eslint-disable-next-line no-unused-vars\nimport $ from 'jquery'\n\nexport default {\n    data () {\n        return {\n            stageStatus: 'All',\n            editLoading:false,\n            ModelbaseInfo:{},\n            editModelTaskVisible: false,\n            activeNames: ['2'],\n            path:'',\n            back_display: 'float:right;display:none',\n            sels:[],\n            baseModelFileSelected:[],\n            activeIndex: 0,\n            selsModelTracking: [], // 列表选中列\n            selsModelFile: [], // 列表选中列\n            files: [],\n            modelFilesLoading:false,\n            modelFiles:[],\n            imageform:{\n                imagename:'',\n                imageDesc:''\n            },\n            imageFormRules:{\n                imagename: [{ required: true, message: '请输入镜像名称', trigger: 'blur' }],\n                imageDesc: [{ required: true, message: '请输入镜像描述', trigger: 'blur' }]\n            },\n            instanceform:{\n                instancename:'',\n                instanceDesc:''\n            },\n            instanceFormRules:{\n                instancename: [{ required: true, message: '请输入镜像名称', trigger: 'blur' }],\n                instanceDesc: [{ required: true, message: '请输入镜像描述', trigger: 'blur' }]\n            },\n            form: {\n                modelname: '',\n                description: '',\n                modelData: [{ altName: '', modelname: 'No Model', exposureNum: 50 }]\n            },\n            FormRules: {\n                modelname: [{ required: true, message: '请输入模型名称', trigger: 'blur' }],\n                description: [{ required: true, message: '请输入模型描述', trigger: 'blur' }]\n            },\n            processstatus:'',\n            stepsetting:'0',\n            current: 0,\n        steps: [\n          {\n\n            title: '部署设置',\n            content: 'First-content',\n          },\n          {\n\n            title: '创建镜像',\n            content: 'Second-content',\n          },\n          {\n\n            title: '创建实例',\n            content: 'Last-content',\n          },\n                      {\n\n            title: '创建在线 API',\n            content: 'Last-content多大点事',\n          },\n        ],\n            active: -1,\n            loadworkspace: false,\n            file_content:'',\n            ExperimentsByTask:[],\n            ModelTaskMetaData:{},\n            filters: {\n                name: ''\n            },\n            project_id: 0,\n            task_id: 0,\n            size: 'medium',\n            getRegisteredModelsLoading: false,\n            RegisteredModels:[],\n            CreatedModels:[],\n            ModelTaskList: [],\n            total: 0,\n            page: 1,\n            listLoading: false,\n            editModelVisible: false,\n      regFormVisible: false, // 编辑界面是否显示\n      regLoading: false,\n      regFormRules: {\n        model_name: [\n          { required: true, message: '请输入模型', trigger: 'blur' },\n          { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n        ]\n      },\n      // 编辑界面数据\n      regForm: {\n        model_id: '',\n        model_name:'',\n        description: ''\n      },\n      editModelForm:{\n          description: ''\n      },\n      addFormVisible: false, // 新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        name: [\n          { required: true, message: '请输入样本名称', trigger: 'blur' },\n          { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n        ],\n        description: [\n          { required: false, message: '请输入描述', trigger: 'blur' },\n          { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n        ]\n      },\n      // 新增界面数据\n      addForm: {\n        name: '',\n        description: ''\n      }\n\n    }\n  },\n  created () {\n    // 如果没有这句代码，select中初始化会是空白的，默认选中就无法实现\n    // this.form.Tasks = this.Tasks[0].id\n  },\n    filters: {\n      formatDate: function (value) {\n        let date = new Date(value);\n        let y = date.getFullYear();\n        let MM = date.getMonth() + 1;\n        MM = MM < 10 ? ('0' + MM) : MM;\n        let d = date.getDate();\n        d = d < 10 ? ('0' + d) : d;\n        let h = date.getHours();\n        h = h < 10 ? ('0' + h) : h;\n        let m = date.getMinutes();\n        m = m < 10 ? ('0' + m) : m;\n        let s = date.getSeconds();\n        s = s < 10 ? ('0' + s) : s;\n        return y + '-' + MM + '-' + d + ' ' + h + ':' + m + ':' + s;\n      }\n    },\n  methods: {\n      // 显示编辑界面\n      handleModelDescEdit: function (index, row) {\n          this.editModelTaskVisible = true\n          let desc = this.ModelbaseInfo.description\n          // this.editForm = Object.assign({}, row);\n      this.editModelForm = Object.assign({}, { description: desc })\n    },\n      disabledCheckBox(row, index) {\n          if (row.is_dir===false) {\n              return true\n          } else {\n              return false\n          }\n      },\n    handleFileDir: function (index, row) {\n      let self = this\n      if (row.is_dir) {\n        this.path = row.rel_path\n          console.log(this.path,\"this.path\")\n        self.getJupyterFiles()\n      } else {\n        //this.DATAInfoVisible = false\n          console.log(\"file\")\n        // this._code_content = row.code_content;\n      }\n      console.log(this.path, this.back_display, 'this.path')\n    },\n      selsChangeModelFile (sels) {\n          this.activeIndex++\n\n          console.log(sels,\"selsModelFileselsModelFile\")\n          this.baseModelFileSelected = sels\n          if(this.activeIndex===1){\n              this.baseModelFileSelected[0].index=\"主程序\"\n          }else{\n              this.baseModelFileSelected.index=''\n          }\n      },\n      handleSelect (key, keyPath) {\n          this.activeIndex = key\n          console.log(this.activeIndex,\"activeIndex\")\n      },\n      _back () {\n          let self = this\n          this.path = self.back\n          self.getJupyterFiles()\n      },\n        // 获取项目动态\n        getJupyterFiles () {\n            this.modelFilesLoading = true\n            let self = this\n            $.ajax({\n                type: 'get',\n                url: test + '/api/models/get_jupyter_files',\n                async: true,\n                data: { project_id: this.$route.params.project_id,\n                       task_id: this.$route.params.task_id,\n                       page: Number(self.page),\n                       path: this.path },\n                headers: {\n                    Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n                },\n                timeout: 5000,\n                success: function (data) {\n                    self.modelFilesLoading = false\n                    if (data.code === '999999') {\n                      self.total = data.data.total\n                      self.is_subdirectory = data.data.is_subdirectory\n                      self.directory = data.data.directory\n                      self.back = data.data.back\n                      self._code = data.data.code\n                      self.files = data.data.files\n                      // use to upload data\n                      self.pathParam = { pathParam: self.directory }\n                      if (self.is_subdirectory) {\n                          self.back_display = 'float:right'\n                      } else {\n                          self.back_display = 'display:none'\n                      }\n                      console.log(data, 'data')\n                  } else {\n                      self.$message.error({\n                          message: \"data.msg\",\n                          center: true\n                      })\n                  }\n              }\n          })\n      },\n        submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert('submit!');\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      },\n      removeDomain(item) {\n        var index = this.dynamicValidateForm.domains.indexOf(item)\n        if (index !== -1) {\n          this.dynamicValidateForm.domains.splice(index, 1)\n        }\n      },\n      addDomain() {\n        this.dynamicValidateForm.domains.push({\n          value: '',\n          key: Date.now()\n        });\n      },\n        createDeploy(){\n            this.stepsetting=\"1\"\n            this.active=0\n        },\n         modifyPostLevel(step, id) {\n              console.log(step, id,\"step, id\");\n      //dosomthing\n    },\n        done(){\n            this.active = 3\n            this.processstatus='success'\n            this.$message.success('Processing complete!')\n        },\n        on_click(e){\n            console.log(e);\n            if (e ===1) {\n               this.addFormVisible=true\n           }\n        },\n        next(formName) {\n            this.$refs[formName].validate((valid) => {\n                if(valid){\n                    // this.current++;\n                    if (this.active++ > 3) this.active = 0;\n                    console.log(this.active ,this.baseModelFileSelected,this.imageform,\"this.active\")\n                }\n\n            });\n        },\n        prev() {\n\n        this.active--;\n      },\n      getExperimentsByTask () {\n          let self = this\n      $.ajax({\n        type: 'get',\n        url: test + '/api/experiments/get_experiment_bytask',\n        async: true,\n        data: { project_id: this.$route.params.project_id,\n               task_id: this.$route.params.task_id,\n               page: self.page,\n               user_key: JSON.parse(sessionStorage.getItem('name')),\n               name: self.filters.name},\n        headers: {\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        },\n        timeout: 5000,\n        success: function (data) {\n          if (data.code === '999999') {\n            self.ExperimentsByTask = data.data.data\n              console.log(self.ExperimentsByTask,\"self.ModelTaskMetaData\")\n            // self.ApiList = data.data.data\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            })\n          }\n        }\n      })\n    },\n      getJupyterNotebook () {\n          let self = this\n          this.loadworkspace= true\n      let param = JSON.stringify({ project_id: this.$route.params.project_id,\n        task_id: this.$route.params.task_id })\n\n      console.log(param, 'dsdds')\n      $.ajax({\n        type: 'post',\n        url: test + '/api/models/get_models_markdown',\n        async: true,\n\n        data: param,\n\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        },\n        timeout: 5000,\n        success: (data) => {\n          // document.getElementById('div1').innerHTML = '读取中...'\n\n          self.file_content = data\n            this.loadworkspace= false\n\n            //console.log(self.file_content,\"file_content\")\n          // $(\"#div1\").html(this._code_content2);\n        }\n      })\n    },\n      getModelTaskData () {\n      let self = this\n      $.ajax({\n        type: 'get',\n        url: test + '/api/models/get_task_metadata',\n        async: true,\n        data: { project_id: this.$route.params.project_id,\n               task_id: this.$route.params.task_id},\n        headers: {\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        },\n        timeout: 5000,\n        success: function (data) {\n          if (data.code === '999999') {\n            self.ModelTaskMetaData = data.data.data\n              console.log(self.ModelTaskMetaData,\"self.ModelTaskMetaData\")\n            // self.ApiList = data.data.data\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            })\n          }\n        }\n      })\n    },\n      handleModelOps(command) {\n          console.log(command,\"command\")\n           this.$router.push(\n               {\n                   name: '模型即服务',\n                   params:\n                   {\n                       project_id: this.$route.params.project_id,\n                       task_id: this.$route.params.task_id,\n                       model_id: command\n                   }\n               })\n          this.$message('click on item ' + command);\n          //\"handleModelOps(scope.$index,scope.row)\"\n      },\n\n    // 获取已经创建的模型信息\n    _getRegisteredModels () {\n      this.getRegisteredModelsLoading = true\n      let self = this\n      let params = {\n        experiment_id: this.$route.params.experiment_id,\n        user_key: JSON.parse(sessionStorage.getItem('name'))\n      }\n      let headers = {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      }\n      getRegisteredModels(headers, params).then(_data => {\n        let { msg, code, data } = _data\n        self.getRegisteredModelsLoading = false\n        self.RegisteredModels = data\n        console.log(self.RegisteredModels,\"self.RegisteredModels\")\n        if (code === '999999') {\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          })\n        }\n      })\n    },\n\n    // 获取模型任务列表\n    _getModelBaseinfo () {\n      this.listLoading = true\n      let self = this\n      let params = {\n        name: this.$route.params.model_name,\n        user_key: JSON.parse(sessionStorage.getItem('name'))\n      }\n\n      let headers = {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      }\n      getModelBaseinfo(headers, params).then(_data => {\n        let { msg, code, data } = _data\n        self.listLoading = false\n        if (code === '999999') {\n\n          self.ModelbaseInfo = data\n            console.log(self.ModelbaseInfo,\"ModelbaseInfo\")\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          })\n        }\n      })\n    },\n    editSubmit: function(){\n        let self = this\n        this.editLoading= true\n        let param = JSON.stringify({ \n            model_name: this.$route.params.model_name,\n            description: this.editModelForm.description,\n            user_key: JSON.parse(sessionStorage.getItem('name'))\n        })\n\n      console.log(param, 'dsdds')\n      $.ajax({\n        type: 'POST',\n        url: test + '/api/models/edit_model_description',\n        async: true,\n        data: param,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        },\n        timeout: 5000,\n        success: (data) => {\n            console.log(data,\"dddddd\")\n            this.editLoading= false\n            this.editModelTaskVisible = false\n            this._getModelBaseinfo()\n            \n        }\n      })\n        \n    },\n    // 删除\n    handleDel: function (index, row) {\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true\n        // NProgress.start();\n        let self = this\n        let params = {\n          project_id: Number(this.$route.params.project_id),\n          table_name: row.tableName,\n          ids: [row.id]\n        }\n        let headers = {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        }\n        console.log(params, 'paramsparamsparamslplp')\n        delSampleTable(headers, params).then(_data => {\n          let { msg, code } = _data\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            })\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            })\n          }\n          self.getSampleList()\n        })\n      })\n    },\n\n    handleCurrentChange (val) {\n      this.page = val\n      this.getSampleList()\n    },\n    // 显示注册界面\n    handleReg: function (index, row) {\n      this.regFormVisible = true\n      this.regForm = Object.assign({}, row)\n      this._getRegisteredModels()\n      // console.log(row.dataSpace,\"row.dataSpace\")\n    },\n    // 显示新增界面\n    handleAdd: function () {\n      this.addFormVisible = true\n    },\n\n    getModelTaskStatus: function(val) {\n      return val\n  },\n    // 编辑\n    regSubmit: function () {\n      let self = this\n\n      this.$refs.regForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认注册该模型吗？', '提示', {}).then(() => {\n            self.regLoading = true\n            let params = {\n              project_id: Number(this.$route.params.project_id),\n              model_id: self.regForm.model_id,\n              task_name:self.regForm.name,\n              user_key: JSON.parse(sessionStorage.getItem('name'))\n            }\n            console.log(params, 'reg')\n            let headers = {\n              'Content-Type': 'application/json',\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            }\n            regModelToTask(headers, params).then(_data => {\n              let { msg, code } = _data\n              self.editLoading = false\n              if (code === '999999') {\n                self.$message({\n                  message: '修改成功',\n                  center: true,\n                  type: 'success'\n                })\n                self.$refs['regForm'].resetFields()\n                self.regFormVisible = false\n                self.getModelTaskList()\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n              }\n            })\n          })\n        }\n      })\n    },\n    // 新增\n    addSubmit: function () {\n      this.$refs.addForm.validate((valid) => {\n        console.log(valid)\n        if (valid) {\n          let self = this\n          this.$confirm('确认创建模型任务吗？', '提示', {}).then(() => {\n            self.addLoading = true\n            // NProgress.start();\n            let params = {\n              project_id: Number(this.$route.params.project_id),\n              name: self.addForm.name,\n              description: self.addForm.description,\n              user_key: JSON.parse(sessionStorage.getItem('name'))\n            }\n            console.log(params, 'paramsparamsparamsparamsparamsparams')\n            let headers = {\n              'Content-Type': 'application/json',\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            }\n            addModelTask(headers, params).then(_data => {\n              let { msg, code } = _data\n              self.addLoading = false\n              if (code === '999999') {\n                self.$message({\n                  message: '模型任务创建成功',\n                  center: true,\n                  type: 'success'\n                })\n                self.$refs['addForm'].resetFields()\n                self.addFormVisible = false\n                self.getModelTaskList()\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n                self.$refs['addForm'].resetFields()\n                self.addFormVisible = false\n                self.getModelTaskList()\n              }\n            })\n          })\n        }\n      })\n    },\n    selsChangeModelTracking: function (sels) {\n      this.selsModelTracking = sels\n    },\n        compareModels: function () {\n      let ids = this.selsModelTracking.map(item => item.id)\n      let self = this\n      this.$confirm('确认比较选中记录吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        self.listLoading = true\n        // NProgress.start();\n        let params = {\n          project_id: Number(this.$route.params.project_id),\n          ids: ids\n        }\n        let headers = {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        }\n\n        this.$router.push(\n               {\n                   name: '模型实验跟踪详情',\n                   params:\n                   {\n                       project_id: this.$route.params.project_id,\n                       task_id: this.$route.params.task_id,\n                       exp_id: ids[0],\n\n                   },query:{exp_id_list: ids}\n               })\n\n\n        // eslint-disable-next-line no-undef\n\n      })\n    },\n    // 批量删除\n    batchRemove: function () {\n      let ids = this.sels.map(item => item.id)\n      let self = this\n      this.$confirm('确认删除选中记录吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        self.listLoading = true\n        // NProgress.start();\n        let params = {\n          project_id: Number(this.$route.params.project_id),\n          ids: ids\n        }\n        let headers = {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        }\n        // eslint-disable-next-line no-undef\n        delHost(headers, params).then(_data => {\n          let { msg, code } = _data\n          self.listLoading = false\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            })\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            })\n          }\n          self.getBaseTaskJob()\n        })\n      })\n    }\n  },\n  mounted () {\n      this._getRegisteredModels()\n      this._getModelBaseinfo()\n      //this.getModelTaskData()\n\n      //this.getExperimentsByTask()\n    //this.project_id = this.$route.params.project_id\n    //this.task_id = this.$route.params.task_id\n    //this._getRegisteredModels(this.$route.params.task_id)\n          //  this.getJupyterNotebook()\n      //this.getJupyterFiles()\n\n    //this.getModelTaskList()\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.box-card {\n  width: 100%;\n  height: 100%;\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.member {\n  width: 70%;\n}\n.main-a {\n  margin: 0px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n}\n.inline {\n  margin: 0px;\n  margin-left: 10px;\n  margin-right: 20px;\n}\n.modelDescStyle {\n  width: 60%;\n}\n.el-dropdown-link {\n  cursor: pointer;\n  color: #409eff;\n}\n.el-icon-arrow-down {\n  font-size: 12px;\n}\n\n/** iframe样式 */\n#iframeContain {\n  width: 100%;\n  text-align: center;\n  height: 800;\n}\ndiv,\niframe {\n  margin: 0 auto;\n  //background-color: #777;\n}\n\niframe {\n  display: block;\n  border-style: none;\n}\n.stepSuc :hover {\n  cursor: pointer; //其他你想要的的css\n}\n\n.steps-content {\n  margin-top: 16px;\n  border: 1px dashed #e9e9e9;\n  border-radius: 6px;\n  background-color: #fafafa;\n  min-height: 150px;\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: 5px;\n  width: 90%;\n}\n\n.steps-action {\n  margin-top: 24px;\n}\n.modelFileSelect {\n  height: 250px;\n  line-height: 100px;\n  overflow: auto;\n  overflow-x: hidden;\n  border: 1px solid #e6e6e6;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelManagerPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelManagerPage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModelManagerPage.vue?vue&type=template&id=09eeb7c6&scoped=true&\"\nimport script from \"./ModelManagerPage.vue?vue&type=script&lang=js&\"\nexport * from \"./ModelManagerPage.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModelManagerPage.vue?vue&type=style&index=0&id=09eeb7c6&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09eeb7c6\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}