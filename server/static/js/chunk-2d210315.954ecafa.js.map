{"version":3,"sources":["webpack:///./src/views/model-deploy/RegisteredModelsPage.vue?cbab","webpack:///src/views/model-deploy/RegisteredModelsPage.vue","webpack:///./src/views/model-deploy/RegisteredModelsPage.vue?abde","webpack:///./src/views/model-deploy/RegisteredModelsPage.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","attrs","filters","nativeOn","$event","preventDefault","type","indexOf","_k","keyCode","key","getModelList","apply","arguments","model","value","callback","$$v","$set","expression","on","_v","handleAdd","directives","name","rawName","registeredmodels","selsChange","scopedSlots","_u","fn","scope","slot","params","model_name","row","_s","size","_f","last_updated_timestamp","tags","latest_versions","version","description","_e","total","handleCurrentChange","addFormVisible","ref","addForm","addFormRules","addLoading","addSubmit","staticRenderFns","data","forked","users","page","listLoading","sels","required","message","trigger","min","max","formatDate","MM","d","h","m","s","methods","handleFork","id","formatTime2","column","date","formatTime","getUserInfo","experiment_id","$","url","async","headers","Authorization","timeout","success","self","console","center","user_key","getRegisteredModels","val","tag","artifact_location","user","addModelExperiment","batchRemove","then","names","delModelExperiment","handleDel","mounted","component"],"mappings":"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","file":"js/chunk-2d210315.954ecafa.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('br'),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.filters},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"名称\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.getModelList.apply(null, arguments)}},model:{value:(_vm.filters.name),callback:function ($$v) {_vm.$set(_vm.filters, \"name\", $$v)},expression:\"filters.name\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getModelList}},[_vm._v(\"查询\")])],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"模型项目\")])],1)],1)],1),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.registeredmodels,\"highlight-current-row\":\"\",\"show-header\":false},on:{\"selection-change\":_vm.selsChange}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"模型名称\",\"min-width\":\"20%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('router-link',{staticStyle:{\"cursor\":\"pointer\",\"color\":\"#0000ff\",\"text-decoration\":\"underline\"},attrs:{\"to\":{name: '模型注册及管理', params: {model_name: scope.row.name}}}},[_vm._v(\"\\n              \"+_vm._s(scope.row.name)+\"\\n            \")]),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"私有\")])],1),_c('el-descriptions',{staticClass:\"margin-top\",staticStyle:{\"margin-top\":\"0px\"},attrs:{\"title\":\"\",\"column\":3,\"size\":_vm.size}},[_c('el-descriptions-item',{attrs:{\"label\":\"最近更新时间\"}},[_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"warning\"}},[_vm._v(_vm._s(_vm._f(\"formatDate\")(scope.row.last_updated_timestamp)))])],1),_c('el-descriptions-item',{attrs:{\"label\":\"模型标签\"}},[_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(_vm._s(scope.row.tags))])],1),_c('el-descriptions-item',{attrs:{\"label\":\"最近版本\"}},[_vm._v(_vm._s(scope.row.latest_versions[0].version))])],1),(scope.row.description)?_c('div',{staticClass:\"text item\"},[_vm._v(\"\\n            \"+_vm._s('模型描述：' + scope.row.description)+\"\\n          \")]):_vm._e()],1)]}}])})],1),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"layout\":\"prev, pager, next\",\"page-size\":10,\"page-count\":_vm.total},on:{\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{staticStyle:{\"width\":\"75%\",\"left\":\"12.5%\"},attrs:{\"title\":\"创建模型项目\",\"visible\":_vm.addFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.addFormVisible=$event}}},[_c('el-form',{ref:\"addForm\",attrs:{\"model\":_vm.addForm,\"label-width\":\"80px\",\"rules\":_vm.addFormRules}},[_c('el-form-item',{attrs:{\"label\":\"模型项目\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addForm.name),callback:function ($$v) {_vm.$set(_vm.addForm, \"name\", $$v)},expression:\"addForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"工件路径\",\"prop\":\"artifact_location\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addForm.artifact_location),callback:function ($$v) {_vm.$set(_vm.addForm, \"artifact_location\", $$v)},expression:\"addForm.artifact_location\"}})],1),_c('el-form-item',{attrs:{\"label\":\"标签\",\"prop\":\"tag\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(_vm.addForm.tag),callback:function ($$v) {_vm.$set(_vm.addForm, \"tag\", $$v)},expression:\"addForm.tag\"}}),_c('span',[_vm._v(\"创建后，您可以将模型参数和工件注册到该实验下。\"),_c('el-link',{attrs:{\"href\":\"https://www.zhihu.com/people/leepand\",\"target\":\"_blank\",\"type\":\"primary\"}},[_vm._v(\"了解更多。\")])],1)],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.addFormVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.addLoading},nativeOn:{\"click\":function($event){return _vm.addSubmit.apply(null, arguments)}}},[_vm._v(\"提交\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <section>\n    <br/>\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px\">\n      <el-form :inline=\"true\" :model=\"filters\" @submit.native.prevent>\n        <el-form-item>\n          <el-input\n            v-model=\"filters.name\"\n            placeholder=\"名称\"\n            @keyup.enter.native=\"getModelList\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"getModelList\">查询</el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleAdd\" icon=\"el-icon-plus\"\n            >模型项目</el-button\n          >\n        </el-form-item>\n      </el-form>\n    </el-col>\n    <el-table\n      :data=\"registeredmodels\"\n      highlight-current-row\n      v-loading=\"listLoading\"\n      :show-header=\"false\"\n      @selection-change=\"selsChange\"\n      style=\"width: 100%\"\n    >\n      <el-table-column\n        prop=\"name\"\n        label=\"模型名称\"\n        min-width=\"20%\"\n        sortable\n        show-overflow-tooltip\n      >\n        <template slot-scope=\"scope\">\n          <el-card class=\"box-card\">\n            <div slot=\"header\" class=\"clearfix\">\n              <router-link\n                :to=\"{name: '模型注册及管理', params: {model_name: scope.row.name}}\"\n                style=\"\n                  cursor: pointer;\n                  color: #0000ff;\n                  text-decoration: underline;\">\n                {{ scope.row.name }}\n              </router-link>\n              <el-button style=\"float: right; padding: 3px 0\" type=\"text\"\n                >私有</el-button\n              >\n            </div>\n            <el-descriptions\n              class=\"margin-top\"\n              title=\"\"\n              style=\"margin-top: 0px\"\n              :column=\"3\"\n              :size=\"size\"\n            >\n              <el-descriptions-item\n                label=\"最近更新时间\"\n                ><el-tag size=\"small\" type=\"warning\">{{scope.row.last_updated_timestamp | formatDate}}</el-tag></el-descriptions-item\n              >\n              <el-descriptions-item label=\"模型标签\"\n                ><el-tag size=\"small\" type=\"info\">{{scope.row.tags}}</el-tag>\n  \n              </el-descriptions-item>\n              <el-descriptions-item\n                label=\"最近版本\"\n                >{{scope.row.latest_versions[0].version}}</el-descriptions-item>\n            </el-descriptions>\n            <div v-if='scope.row.description' class=\"text item\">\n              {{'模型描述：' + scope.row.description }}\n            </div>\n          </el-card>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\">\n      <el-pagination\n        layout=\"prev, pager, next\"\n        @current-change=\"handleCurrentChange\"\n        :page-size=\"10\"\n        :page-count=\"total\"\n        style=\"float: right\"\n      >\n      </el-pagination>\n    </el-col>\n\n    <!--新增界面-->\n    <el-dialog\n      title=\"创建模型项目\"\n      :visible.sync=\"addFormVisible\"\n      :close-on-click-modal=\"false\"\n      style=\"width: 75%; left: 12.5%\"\n    >\n      <el-form\n        :model=\"addForm\"\n        label-width=\"80px\"\n        :rules=\"addFormRules\"\n        ref=\"addForm\"\n      >\n        <el-form-item label=\"模型项目\" prop=\"name\">\n          <el-input v-model=\"addForm.name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"工件路径\" prop=\"artifact_location\">\n          <el-input v-model=\"addForm.artifact_location\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"标签\" prop=\"tag\">\n          <el-input\n            type=\"textarea\"\n            :rows=\"2\"\n            v-model=\"addForm.tag\"\n          ></el-input>\n          <span\n            >创建后，您可以将模型参数和工件注册到该实验下。<el-link\n              href=\"https://www.zhihu.com/people/leepand\"\n              target=\"_blank\"\n              type=\"primary\"\n              >了解更多。</el-link\n            ></span\n          >\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          @click.native=\"addSubmit\"\n          :loading=\"addLoading\"\n          >提交</el-button\n        >\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\n// import NProgress from 'nprogress'\nimport $ from 'jquery'\nimport moment from 'moment'\nimport { test, getRegisteredModels, delModelExperiment, addModelExperiment } from '@/api/api'\n// import ElRow from \"element-ui/packages/row/src/row\";\nexport default {\n  // components: {ElRow},\n  data () {\n    return {\n        forked:-1,\n      users: {},\n      filters: {\n        name: ''\n      },\n      registeredmodels: [],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [], // 列表选中列\n      addFormVisible: false, // 新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        name: [\n          { required: true, message: '请输入名称', trigger: 'blur' },\n          { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n        ],\n        description: [\n          { required: false, message: '请输入版本号', trigger: 'blur' },\n          { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n        ]\n      },\n      // 新增界面数据\n      addForm: {\n        name: '',\n        description: ''\n      }\n    }\n  },\n    filters: {\n      formatDate: function (value) {\n        let date = new Date(value);\n        let y = date.getFullYear();\n        let MM = date.getMonth() + 1;\n        MM = MM < 10 ? ('0' + MM) : MM;\n        let d = date.getDate();\n        d = d < 10 ? ('0' + d) : d;\n        let h = date.getHours();\n        h = h < 10 ? ('0' + h) : h;\n        let m = date.getMinutes();\n        m = m < 10 ? ('0' + m) : m;\n        let s = date.getSeconds();\n        s = s < 10 ? ('0' + s) : s;\n        return y + '-' + MM + '-' + d + ' ' + h + ':' + m + ':' + s;\n      }\n    },\n  methods: {\n      handleFork(id){\n        this.forked=id\n      },\n    // row[column.property] 能读取到该行该列的数据。代码中实现了时间格式的转换\n    formatTime2 (row, column) {\n      const date = new Date(row[column.property])\n      return date.getFullYear() + '-' +\n                    date.getMonth() + '-' +\n                    date.getDate() + ' ' +\n                    date.getHours() + ':' +\n                    date.getMinutes() + ':' +\n                    date.getSeconds()\n    },\n    formatTime: function (row, column) { // 日期格式化\n      var date = row[column.property]\n      if (typeof date === 'undefined') {\n        return ''\n      }\n      return moment(date).format('YYYY-MM-DD HH:mm:ss')\n    },\n\n    getUserInfo () {\n      let self = this\n\n      let param = { experiment_id: self.$route.params.experiment_id }\n      $.ajax({\n        type: 'get',\n        url: test + '/api/user/get_user_meta',\n        async: true,\n        data: param,\n        headers: {\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        },\n        timeout: 5000,\n        success: function (data) {\n          if (data.code === '999999') {\n            self.users = data.data.users\n            console.log(self.users, 'self.users')\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            })\n          }\n        }\n      })\n    },\n    // 获取模型项目列表\n    getModelList () {\n      this.listLoading = true\n      let self = this\n      let params = { page: self.page,\n        user_key: JSON.parse(sessionStorage.getItem('name')),\n        name: self.filters.name }\n      // let headers = {Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))};\n      let headers = {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      }\n      getRegisteredModels(headers, params).then((res) => {\n        self.listLoading = false\n        let { msg, code, data } = res\n        if (code === '999999') {\n          self.total = data.total\n          self.registeredmodels = data.data[\"registered_models\"]\n            console.log(\"self.registeredmodels\",self.registeredmodels)\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          })\n        }\n      })\n    },\n    handleCurrentChange (val) {\n      this.page = val\n      this.getModelList()\n    },\n    // 显示新增界面\n    handleAdd: function () {\n      this.addFormVisible = true\n    },\n    // 新增\n    addSubmit: function () {\n      this.$refs.addForm.validate((valid) => {\n        if (valid) {\n          let self = this\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            self.addLoading = true\n            // NProgress.start();\n            let params = JSON.stringify({\n              name: self.addForm.name,\n              tag: self.addForm.tag,\n              artifact_location: self.addForm.artifact_location,\n              user: JSON.parse(sessionStorage.getItem('name'))\n            })\n            let header = {\n              'Content-Type': 'application/json',\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            }\n            addModelExperiment(header, params).then(_data => {\n              let { msg, code } = _data\n              self.addLoading = false\n              if (code === '999999') {\n                self.$message({\n                  message: '模型项目添加成功',\n                  center: true,\n                  type: 'success'\n                })\n                self.$refs['addForm'].resetFields()\n                self.addFormVisible = false\n                self.getModelList()\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n                self.$refs['addForm'].resetFields()\n                self.addFormVisible = false\n                self.getModelList()\n              }\n            })\n          })\n        }\n      })\n    },\n    // 批量删除\n    batchRemove: function () {\n      let names = this.sels.map(item => item.name)\n      this.$confirm('确认删除选中模型吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true\n        // NProgress.start();\n        let self = this\n        let params = { names: names, user_key: JSON.parse(sessionStorage.getItem('name')) }\n        let header = {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        }\n        delModelExperiment(header, params).then(_data => {\n          let { msg, code } = _data\n          if (code === '999999') {\n            self.$message({\n              message: '模型批量删除成功',\n              center: true,\n              type: 'success'\n            })\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            })\n          }\n          self.getModelList()\n        })\n      })\n    },\n    // 删除\n    handleDel: function (index, row) {\n      this.$confirm('确认删除该模型吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true\n        // NProgress.start();\n        let self = this\n        let params = { names: [row.name],\n          user_key: JSON.parse(sessionStorage.getItem('name')) }\n        let header = {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        }\n        delModelExperiment(header, params).then(_data => {\n          let { msg, code } = _data\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            })\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            })\n          }\n          self.getModelList()\n        })\n      })\n    },\n    selsChange: function (sels) {\n      this.sels = sels\n    }\n  },\n  mounted () {\n    this.getModelList()\n    //this.getUserInfo()\n  }\n}\n</script>\n\n<style></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RegisteredModelsPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RegisteredModelsPage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RegisteredModelsPage.vue?vue&type=template&id=9d0ea618&\"\nimport script from \"./RegisteredModelsPage.vue?vue&type=script&lang=js&\"\nexport * from \"./RegisteredModelsPage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}